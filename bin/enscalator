#!/usr/bin/env ruby

require 'enscalator'
require 'trollop'

argv = ARGV.dup
OPTS = Trollop::options do
  opt :list_templates, "List all available templates", default: false
  opt :template, "Template name", type: String
  opt :region,  "AWS Region", type: String, default: 'us-east-1'
  opt :parameters, "Parameters 'Key1=Value1;Key2=Value2'", type: String
  opt :stack_name, "Stack name", type: String
  opt :create_stack, "Create the stack", default: false
  opt :expand, "Print template's JSON", default: false
  opt :capabilities, "AWS capabilities", default: 'CAPABILITY_IAM'
end

templates = Enscalator::Templates.constants.map(&:to_s)

if OPTS[:list_templates]
  STDERR.puts "Available templates:"
  STDERR.puts templates.sort
  exit
end

if OPTS[:template] && templates.include?(OPTS[:template])
  # for stack_name use template name as a base and convert it from camelcase to underscore case
  OPTS[:stack_name] ||= OPTS[:template].underscore
  Object.const_get("Enscalator::Templates::#{OPTS[:template]}").new(OPTS.merge({ARGV: argv})).exec!
else
  STDERR.puts "Template #{OPTS[:template]} doesn't exist"
end

